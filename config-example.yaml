# Example config.yaml file

# Paths to each microservice.
# This is used for those services which will use these ones for lookups.
services:
  reference: https://ref.example.com
  timetable: https://timetable.example.com
  darwind3: https://d3.example.com
  ldb: https://ldb.example.com

# The embedded webserver
server:
  # The port to listen on, defaults to 8080
  port: 8081

  # Optional context path to prefix all rest endpoints
  #context: /path

# The database
database:
  # If set the path to the directory to hold the database files.
  # This is only used if any of the database names are not defined or if they
  # don't start with /
  path: /database

  # The name of the file to hold the Darwin Reference database
  # If not defined then this defaults to dwref.db
  #reference: dwref.db

  # The name of the file to hold the Darwin Timetable
  #timetable: dwtt.db

  # The name of the file to hold the pushPort database
  #pushPort: dwlive.db

  # The name of the file to hold the LDB database
  #ldb: dwldb.db

# Details about the National Rail FTP server
# To use this you need to register at http://datafeeds.nationalrail.co.uk/
# See also http://nrodwiki.rockshore.net/index.php/About_the_NRE_Feeds
ftp:
  # Is the ftp functionality enabled
  #enabled: true

  # The server to connect to. Defaults to "datafeeds.nationalrail.co.uk:21"
  #server: "datafeeds.nationalrail.co.uk:21"

  # The user to connect to, defaults to "ftpuser"
  #user: "ftpuser"

  # The password to use, if this is not defined then ftp is disabled
  password: "your ftp password here"

  # The schedule to perform automatic updates.
  # If this is not present then automatic updates is disabled.
  # In this example we update every hour between 2 & 6 am at 30 minutes past the hour.
  # We do this so that if the first update fails (i.e. they are not ready) we
  # hopefully get an update in a subsequent attempt.
  schedule: "0 30 2-6 * * *"

# RabbitMQ config
rabbitmq:
  # URL of the connection. If this is not set then RabbitMQ is not used
  url: amqp://user:password@server
  # Name to show in management describing this connection
  connectionName: LDB Departure Boards

# Details on handling the realtime pushPort D3 feed
d3:
  # If true then if we get a Train Status update for an unknown schedule then
  # attempt to retrieve it from the timetable. If that fails or this is disabled
  # then a new blank schedule is created.
  resolveSchedules: true

  # The Queue name to create in RabbitMQ
  queueName: ldb
  # The routingKey to bind to the queue
  routingKey: nre.push

  # routingKey prefix for events from the darwind3 service.
  # The ldb service will also use this when listening to events.
  # This is optional but useful if running multiple systems on the same RabbitMQ,
  # e.g. a development and production environment
  #eventKeyPrefix: dev

# Statistics management
statistics:
  # If true then log statistics to stdout
  log: true

  # If set the path to expose a rest service returning statistics
  rest: /stats

  # Schedule used when capturing & Logging statistics.
  # Defaults to once per minute
  #schedule: "0 * * * * *"
